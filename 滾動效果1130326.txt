        //滾動效果 drag全部都再viewport內確實不用滾
        // let center_y = 0
        const scroller = document.querySelector("#scroller");
        const image = document.querySelector("#drag");
        const board = document.querySelector('#board');


        //throttle
        function throttle(fn, delay = 2000) {
          let timer = null;
          return function (...args) {
            if (timer) return;
            timer = setTimeout(() => {
              timer = null;
            }, delay);
            fn.apply(this, args);
          };
        }

        const updateThrottleText = throttle(() => {
          console.log("throttle");
        }, 2000);

        scroller.addEventListener("scroll", () => {
          updateThrottleText();
        });


        //電腦一開始畫面移到中間
        const scrollerClientHeight = scroller.clientHeight;
        const scrollerClientWidth = scroller.clientWidth;
        const scrollerScrollHeight = scroller.scrollHeight;


        document.addEventListener("DOMContentLoaded", () => {
          console.log("Hello World!");
          console.log(`scroller.scrollHeight${scroller.scrollHeight}`); //整個畫面的高度
          // scroller.scroll({
          //   top: scrollerClientHeight,  //往下滑動
          //   left: 0,
          //   behavior: "instant",
          // });
          checkCursorPC();
          startup();
        })

        //改變瀏覽器寬度
        window.onresize = function () {
          // scroller.scroll({
          //   top: scrollerClientHeight,  //往下滑動
          //   left: 0,
          //   behavior: "instant",
          // });
          // checkCursorPC();
          startup();
          console.log(`2scroller.scrollHeight${scroller.scrollHeight}`);
        };

        //當觸發scroll時，關閉掉下方的螢幕自動滑動

        scroller.removeEventListener('scroll', checkCursorMobile);

        //監聽滑鼠滑動後螢幕滑動位置(電腦)
        function checkCursorPC() {
          document.addEventListener("DOMContentLoaded", () => {
            console.log("Hello World!");
            console.log(`scroller.scrollHeight${scroller.scrollHeight}`); //整個畫面的高度
            scroller.scroll({
              top: scrollerClientHeight,  //往下滑動
              left: 0,
              behavior: "instant",
            });
            checkCursorPC();
          });


          scroller.addEventListener('mousemove', function (e) {
            let x = e.pageX;
            let y = e.pageY;

            console.log(x, y);
            console.log(e);
            console.log(`scroller clientHeight ${scroller.clientHeight}`);
            console.log(`scroller clientwidth ${scroller.clientWidth}`);
            if (y <= parseInt(scrollerClientHeight * 0.3)) {
              console.log("小於scrollerClientHeight三分之一");
              scroller.scrollTo({
                top: -scrollerClientHeight,  //往下滑動
                left: 0,
                behavior: "smooth",
              });
            } else {
              console.log("大於scrollerClientHeight三分之一");
              scroller.scrollTo({
                top: parseInt(scrollerClientHeight * 2),  //往上滑動
                left: 0,
                behavior: "smooth",
              });
              console.log(`scrollerClientWidth${scrollerClientWidth}`);
            }
          });
        }

        //監聽觸碰螢幕滑動位置(手機)

        function startup() {
          scroller.addEventListener("touchcancel", checkCursorMobile);
        }
        function checkCursorMobile(e) {
          console.log(e);
          console.log(`mobile scroller clientHeight ${scroller.clientHeight}`);
          console.log(`mobile scroller clientwidth ${scroller.clientWidth}`);

          scroller.scrollTo({
            top: scrollerClientHeight,  //往下滑動
            left: 0,
            behavior: "smooth",
          });
        };
